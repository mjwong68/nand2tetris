function TwoWayList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 0
push constant 0
call Node.new 3
pop this 0
push this 0
push this 0
call Node.setNext 2
pop temp 0
push this 0
push this 0
call Node.setPrevious 2
pop temp 0
push pointer 0
return
function TwoWayList.newFromArray 1
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 0
push constant 0
call Node.new 3
pop this 0
push this 0
push this 0
call Node.setNext 2
pop temp 0
push this 0
push this 0
call Node.setPrevious 2
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
push argument 0
add
pop pointer 1
push that 0
call TwoWayList.add 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function TwoWayList.getHead 0
push argument 0
pop pointer 0
push this 0
return
function TwoWayList.contains 1
push argument 0
pop pointer 0
push this 0
call Node.getNext 1
pop this 1
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push this 1
call Node.getData 1
pop local 0
push pointer 0
push local 0
push argument 1
call TwoWayList.compare 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TwoWayList.size 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
call Node.getNext 1
pop this 1
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function TwoWayList.isEmpty 0
push argument 0
pop pointer 0
push this 0
call Node.getNext 1
push this 0
eq
return
function TwoWayList.add 0
push argument 0
pop pointer 0
push argument 1
push this 0
push this 0
call Node.getPrevious 1
call Node.new 3
pop this 1
push this 0
push this 1
call Node.setPrevious 2
pop temp 0
push this 0
call Node.getPrevious 1
pop this 1
push this 1
call Node.getPrevious 1
pop this 1
push this 1
push this 0
call Node.getPrevious 1
call Node.setNext 2
pop temp 0
push constant 0
not
return
function TwoWayList.remove 1
push argument 0
pop pointer 0
push this 0
call Node.getNext 1
pop this 1
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 25
call String.new 1
push constant 78
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push this 1
call Node.getData 1
pop local 0
push pointer 0
push local 0
push argument 1
call TwoWayList.compare 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Node.getPrevious 1
pop this 2
push this 2
push this 1
call Node.getNext 1
call Node.setNext 2
pop temp 0
push this 1
call Node.getNext 1
pop this 2
push this 2
push this 1
call Node.getPrevious 1
call Node.setPrevious 2
pop temp 0
push constant 0
not
return
label IF_FALSE1
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TwoWayList.replace 1
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
push argument 2
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 25
call String.new 1
push constant 78
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_FALSE0
push this 0
call Node.getNext 1
pop this 1
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push this 1
call Node.getData 1
pop local 0
push pointer 0
push local 0
push argument 1
call TwoWayList.compare 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push argument 2
call Node.setData 2
pop temp 0
push constant 0
not
return
label IF_FALSE1
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TwoWayList.compare 6
push argument 0
pop pointer 0
push argument 1
call String.length 1
pop local 4
push argument 2
call String.length 1
pop local 5
push local 4
push local 5
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push local 4
lt
not
if-goto WHILE_END0
push argument 1
push local 1
call String.charAt 2
pop local 2
push argument 2
push local 1
call String.charAt 2
pop local 3
push local 2
push local 3
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function TwoWayList.clear 0
push argument 0
pop pointer 0
push this 0
push this 0
call Node.setNext 2
pop temp 0
push this 0
push this 0
call Node.setPrevious 2
pop temp 0
push constant 0
return
function TwoWayList.iterator 0
push argument 0
pop pointer 0
push pointer 0
call TwoWayListIterator.new 1
return
function TwoWayList.showAll 0
push argument 0
pop pointer 0
push this 0
call Node.getNext 1
pop this 1
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push this 1
call Node.getData 1
call Output.printString 1
pop temp 0
push constant 2
call String.new 1
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
function TwoWayList.iterShowAll 1
push argument 0
pop pointer 0
push pointer 0
call TwoWayList.iterator 1
pop local 0
label WHILE_EXP0
push local 0
call TwoWayListIterator.hasNext 1
not
if-goto WHILE_END0
push local 0
call TwoWayListIterator.next 1
call Output.printString 1
pop temp 0
push constant 2
call String.new 1
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push local 0
call TwoWayListIterator.dispose 1
pop temp 0
push constant 0
return
function TwoWayList.dispose 0
push argument 0
pop pointer 0
push this 0
call Node.getNext 1
pop this 1
label WHILE_EXP0
push this 1
push this 0
eq
not
not
if-goto WHILE_END0
push this 1
call Node.dispose 1
pop temp 0
push this 1
call Node.getNext 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push this 0
call Node.dispose 1
pop temp 0
push this 1
call Node.dispose 1
pop temp 0
push this 2
call Node.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
